<?xml version="1.0" encoding="UTF-8"?>
<resourceDoc><classDocs><classDoc><className>com.nerdwin15.stash.webhook.rest.PluginExceptionHandler</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>toResponse</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>com.nerdwin15.stash.webhook.rest.LicenseInfoResource</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>isLicensed</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>com.nerdwin15.stash.webhook.rest.TriggerButtonState</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getState</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setState</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getReason</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setReason</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>com.nerdwin15.stash.webhook.rest.TriggerButtonState.ButtonState</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>values</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>valueOf</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>com.nerdwin15.stash.webhook.rest.JenkinsResource</className><commentText><![CDATA[REST resource used to test the Jenkins configuration]]></commentText><methodDocs><methodDoc><methodName>validateParametersForTestingWithProject</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>validateParametersForTestingWithRepository</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>testSingleRepository</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>testEntireProject</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>triggerPullRequestEvent</methodName><commentText><![CDATA[Trigger a build on the Jenkins instance]]></commentText><responseDoc><returnDoc>The response. Ok if it worked. Otherwise, an error.</returnDoc></responseDoc><paramDocs><paramDoc><paramName>repository</paramName><commentText><![CDATA[The repository to trigger]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.core.Context</annotationTypeName></annotationDoc></annotationDocs></paramDoc><paramDoc><paramName>pullRequestId</paramName><commentText><![CDATA[Pull request id]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>pr_id</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc></paramDocs></methodDoc><methodDoc><methodName>config</methodName><commentText><![CDATA[Get the default clone urls for a repository.]]></commentText><responseDoc><returnDoc>A response</returnDoc></responseDoc><paramDocs><paramDoc><paramName>repository</paramName><commentText><![CDATA[The repository to get clone urls for]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.core.Context</annotationTypeName></annotationDoc></annotationDocs></paramDoc></paramDocs></methodDoc><methodDoc><methodName>configProject</methodName><commentText><![CDATA[Get the example urls for a project.]]></commentText><responseDoc><returnDoc>A response</returnDoc></responseDoc><paramDocs><paramDoc><paramName>project</paramName><commentText><![CDATA[The project to get clone urls for]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.core.Context</annotationTypeName></annotationDoc></annotationDocs></paramDoc></paramDocs></methodDoc><methodDoc><methodName>getCommitterOptionsForRepository</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getCommitterOptionsForProject</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>pullRequestButtonState</methodName><commentText><![CDATA[Get render state for pullrequest button.]]></commentText><responseDoc><returnDoc>200 with json with state and reason for that state.</returnDoc></responseDoc><paramDocs><paramDoc><paramName>repository</paramName><commentText><![CDATA[The repository for the pull request.]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.core.Context</annotationTypeName></annotationDoc></annotationDocs></paramDoc><paramDoc><paramName>pullRequestId</paramName><commentText><![CDATA[The pull request we're checking against.]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>pr_id</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc></paramDocs></methodDoc></methodDocs></classDoc></classDocs></resourceDoc>
